{"version":3,"sources":["node_modules/stats.js/build/stats.min.js","helpers.js","index.js"],"names":["isAndroid","test","navigator","userAgent","isiOS","isMobile","getVideoInputs","mediaDevices","enumerateDevices","console","log","videoDevices","filter","device","kind","getDeviceIdForLabel","cameraLabel","videoInputs","i","length","videoInput","label","deviceId","stopExistingVideoCapture","state","video","srcObject","getTracks","forEach","track","stop","getConstraints","facingMode","setupCamera","getUserMedia","Error","videoElement","document","getElementById","videoConstraints","stream","Promise","resolve","onloadedmetadata","width","videoWidth","height","videoHeight","loadVideo","e","info","textContent","style","display","play","stats","Stats","net","setupFPS","showPanel","body","appendChild","dom","bindPage","cameras","webkitGetUserMedia","mozGetUserMedia"],"mappings":"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","file":"coincalculator.8e6a282a.js","sourceRoot":"..","sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","export function isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\n\nexport function isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\n\nexport function isMobile() {\n  return isAndroid() || isiOS();\n}\n\nexport async function getVideoInputs() {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n    console.log('enumerateDevices() not supported.');\n    return [];\n  }\n\n  const devices = await navigator.mediaDevices.enumerateDevices();\n\n  const videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n  return videoDevices;\n}\n\nexport async function getDeviceIdForLabel(cameraLabel) {\n  const videoInputs = await getVideoInputs();\n\n  for (let i = 0; i < videoInputs.length; i++) {\n    const videoInput = videoInputs[i];\n    if (videoInput.label === cameraLabel) {\n      return videoInput.deviceId;\n    }\n  }\n\n  return null;\n}\n\nfunction stopExistingVideoCapture(state) {\n  if (state.video && state.video.srcObject) {\n    state.video.srcObject.getTracks().forEach(track => {\n      track.stop();\n    })\n    state.video.srcObject = null;\n  }\n}\n\nasync function getConstraints(cameraLabel) {\n  let deviceId;\n  let facingMode;\n\n  if (cameraLabel) {\n    deviceId = await getDeviceIdForLabel(cameraLabel);\n    // on mobile, use the back mode based on the camera.\n    facingMode = isMobile() ? 'environment' : null;\n  };\n  return {deviceId, facingMode};\n}\n\n/**\n * Loads a the camera to be used in the demo\n *\n */\nexport async function setupCamera(cameraLabel, state) {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    throw new Error(\n        'Browser API navigator.mediaDevices.getUserMedia not available');\n  }\n\n  const videoElement = document.getElementById('video');\n\n  stopExistingVideoCapture(state);\n\n  const videoConstraints = await getConstraints(cameraLabel, state);\n  console.log('videoConstraints', videoConstraints);\n\n  const stream = await navigator.mediaDevices.getUserMedia(\n      {'audio': false, 'video': videoConstraints});\n  videoElement.srcObject = stream;\n\n  return new Promise((resolve) => {\n    videoElement.onloadedmetadata = () => {\n      videoElement.width = videoElement.videoWidth;\n      videoElement.height = videoElement.videoHeight;\n      resolve(videoElement);\n    };\n  });\n}\n\nexport async function loadVideo(cameraLabel, state) {\n  try {\n    state.video = await setupCamera(cameraLabel, state);\n  } catch (e) {\n    let info = document.getElementById('info');\n    info.textContent = 'this browser does not support video capture,' +\n        'or this device does not have a camera';\n    info.style.display = 'block';\n    throw e;\n  }\n\n  console.log('state.video', state.video);\n\n  state.video.style.display='block'\n  state.video.play();\n}\n","import Stats from 'stats.js';\n\nconst stats = new Stats();\nconst state = {\n  video: null,\n  stream: null,\n  net: null,\n};\n\nimport {getVideoInputs,loadVideo} from './helpers';\n\n/**\n * Sets up a frames per second panel on the top-left of the window\n */\nfunction setupFPS() {\n  stats.showPanel(0);  // 0: fps, 1: ms, 2: mb, 3+: custom\n  document.body.appendChild(stats.dom);\n}\n\n\n/**\n * Kicks off the demo.\n */\nexport async function bindPage() {\n  let cameras = await getVideoInputs();\n  console.log(cameras);\n\n  await loadVideo(cameras[0].label, state);\n\n  document.getElementById('loading').style.display = 'none';\n  document.getElementById('main').style.display = 'inline-block';\n\n  setupFPS();\n}\n\nconsole.log('START');\nnavigator.getUserMedia = navigator.getUserMedia ||\n    navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n// kick off the demo\nbindPage();"]}